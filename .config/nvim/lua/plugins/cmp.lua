return {
	{ "echasnovski/mini.completion", version = false, config = true },
	-- {
	-- 	"hrsh7th/nvim-cmp",
	-- 	event = "InsertEnter",
	-- 	dependencies = {
	-- 		{
	-- 			"L3MON4D3/LuaSnip",
	-- 			build = (function()
	-- 				if vim.fn.has("win32") == 1 or vim.fn.executable("make") == 0 then
	-- 					return
	-- 				end
	-- 				return "make install_jsregexp"
	-- 			end)(),
	-- 		},
	-- 		"saadparwaiz1/cmp_luasnip",
	-- 		"hrsh7th/cmp-nvim-lsp",
	-- 		"hrsh7th/cmp-path",
	-- 		"hrsh7th/cmp-buffer",
	-- 		"hrsh7th/cmp-cmdline",
	-- 		"onsails/lspkind.nvim",
	-- 	},
	-- 	config = function()
	-- 		local cmp = require("cmp")
	-- 		local luasnip = require("luasnip")
	-- 		local lspkind = require("lspkind")
	--
	-- 		luasnip.config.setup({})
	-- 		cmp.setup({
	-- 			view = {
	-- 				entries = { name = "custom", selection_order = "near_cursor" },
	-- 			},
	-- 			formatting = {
	-- 				format = lspkind.cmp_format({
	-- 					mode = "symbol_text",
	-- 					maxwidth = 20,
	-- 					ellipsis_char = "...",
	-- 					show_labelDetails = true,
	-- 					before = function(entry, vim_item)
	-- 						vim_item.menu = ""
	-- 						return vim_item
	-- 					end,
	-- 				}),
	-- 			},
	--
	-- 			snippet = {
	-- 				expand = function(args)
	-- 					luasnip.lsp_expand(args.body)
	-- 				end,
	-- 			},
	-- 			mapping = cmp.mapping.preset.insert({
	-- 				["<C-n>"] = cmp.mapping.select_next_item(),
	-- 				["<C-p>"] = cmp.mapping.select_prev_item(),
	-- 				["<C-y>"] = cmp.mapping.confirm({ select = true }),
	-- 				["<C-Space>"] = cmp.mapping.complete({}),
	-- 			}),
	-- 			sources = {
	-- 				{ name = "nvim_lsp" },
	-- 				{ name = "luasnip" },
	-- 			},
	-- 		})
	--
	-- 		cmp.setup.filetype({ "sql" }, {
	-- 			sources = {
	-- 				{ name = "vim-dadbod-completion" },
	-- 				{ name = "buffer" },
	-- 			},
	-- 		})
	-- 	end,
	-- },
}
